{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welid\\\\Desktop\\\\react\\\\reactmoevies\\\\src\\\\cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport Trailer from \"./trailer\";\n\nconst Cards = ({\n  result\n}) => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [trailerKey, setTrailerKey] = useState({\n    key: []\n  });\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\n  const trailer = `http://api.themoviedb.org/3/movie/${result.id}/videos?api_key=${apiKey}&append_to_respone=videos`;\n\n  const Open = () => setShowPopup(true);\n\n  const Close = () => setShowPopup(false);\n\n  useEffect(() => {\n    axios(trailer).then(({\n      data\n    }) => {\n      let ok = data.results;\n      console.log(ok);\n      console.log(ok[0].key);\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: \"15rem\"\n    },\n    onClick: Open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: `http://image.tmdb.org/t/p/w185/` + result.poster_path,\n    alt: \"no image found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: showPopup,\n    onHide: Close,\n    centered: true,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, result.original_title, \"(\", result.release_date.substring(0, 4), \")\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, console.log(movieTrailer), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, result.id), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", result.overview), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"rating=\", result.vote_average), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"language=\", result.original_language), React.createElement(Trailer, {\n    key: trailerKey[0].key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: Close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/welid/Desktop/react/reactmoevies/src/cards.js"],"names":["React","useState","useEffect","Card","Button","Modal","axios","Trailer","Cards","result","showPopup","setShowPopup","trailerKey","setTrailerKey","key","apiKey","trailer","id","Open","Close","then","data","ok","results","console","log","width","poster_path","original_title","release_date","substring","movieTrailer","overview","vote_average","original_language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport Trailer from \"./trailer\";\r\n\r\nconst Cards = ({ result }) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [trailerKey, setTrailerKey] = useState({\r\n    key: [],\r\n  });\r\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\r\n  const trailer = `http://api.themoviedb.org/3/movie/${result.id}/videos?api_key=${apiKey}&append_to_respone=videos`;\r\n  const Open = () => setShowPopup(true);\r\n  const Close = () => setShowPopup(false);\r\n\r\n  useEffect(() => {\r\n    axios(trailer).then(({ data }) => {\r\n      let ok = data.results;\r\n      console.log(ok);\r\n      console.log(ok[0].key);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Card style={{ width: \"15rem\" }} onClick={Open}>\r\n        <button>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`http://image.tmdb.org/t/p/w185/` + result.poster_path}\r\n            alt=\"no image found\"\r\n          />\r\n        </button>\r\n      </Card>\r\n      <div className=\"popup\">\r\n        <Modal show={showPopup} onHide={Close} centered size=\"lg\">\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {result.original_title}({result.release_date.substring(0, 4)})\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {console.log(movieTrailer)}\r\n            <p>{result.id}</p>\r\n            <h5> {result.overview}</h5>\r\n            <p>rating={result.vote_average}</p>\r\n            <p>language={result.original_language}</p>\r\n            <Trailer key={trailerKey[0].key} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={Close}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}