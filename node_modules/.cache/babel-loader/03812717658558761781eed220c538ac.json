{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welid\\\\Desktop\\\\react\\\\movies\\\\src\\\\comp\\\\cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport Trailer from \"./trailer\";\nimport Actors from \"./actors\";\nimport { IoIosStarOutline } from \"react-icons/io\";\nimport { MdLanguage } from \"react-icons/md\";\n\nconst Cards = props => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [trailerKey, setTrailerKey] = useState([]);\n  const [cast, setCast] = useState([]);\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\n  const trailer = `https://api.themoviedb.org/3/movie/${props.key}/videos?api_key=${apiKey}&append_to_respone=videos`;\n  const credit = `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${apiKey}`;\n\n  const Open = () => setShowPopup(true);\n\n  const Close = () => setShowPopup(false);\n\n  useEffect(() => {\n    axios(trailer).then(({\n      data\n    }) => {\n      setTrailerKey(data.propss);\n    });\n  }, [trailer]);\n  let trailerMovie = \"\";\n  /* for (let i = 0; i < trailerKey.length; i++) {\r\n    let name = trailerKey[i].name.toLowerCase().split(\" \");\r\n    for (let a = 0; a < name.length; a++) {\r\n      if (name[a] === \"official\" && name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n      if (name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n    }\r\n  } */\n\n  useEffect(() => {\n    axios(credit).then(({\n      data\n    }) => {\n      const actors = data.cast.slice(0, 8);\n      setCast(actors);\n    });\n  }, [credit]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"movie\",\n    style: {\n      width: \"13rem\"\n    },\n    onClick: Open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: `https://image.tmdb.org/t/p/w185/` + props.poster_path,\n    alt: \"no image found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    show: showPopup,\n    onHide: Close,\n    centered: true,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titlemovie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.title))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modalimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w185/\" + props.poster_path,\n    alt: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(IoIosStarOutline, {\n    style: {\n      color: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(IoIosStarOutline, {\n    style: {\n      color: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(IoIosStarOutline, {\n    style: {\n      color: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), props.vote_average), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(MdLanguage, {\n    className: \"earth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), props.original_language)), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" \", props.overview))))), React.createElement(Trailer, {\n    trailer: trailerMovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"actors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      justifyContent: \"space-evenly\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, cast.map(cast => React.createElement(Actors, {\n    key: cast.id,\n    name: cast.name,\n    character: cast.character,\n    img: cast.profile_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: Close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/welid/Desktop/react/movies/src/comp/cards.js"],"names":["React","useState","useEffect","Card","Button","Modal","axios","Trailer","Actors","IoIosStarOutline","MdLanguage","Cards","props","showPopup","setShowPopup","trailerKey","setTrailerKey","cast","setCast","apiKey","trailer","key","credit","id","Open","Close","then","data","propss","trailerMovie","actors","slice","width","poster_path","title","color","vote_average","original_language","overview","justifyContent","map","name","character","profile_path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMkB,MAAM,GAAG,kCAAf;AACA,QAAMC,OAAO,GAAI,sCAAqCR,KAAK,CAACS,GAAI,mBAAkBF,MAAO,2BAAzF;AACA,QAAMG,MAAM,GAAI,sCAAqCV,KAAK,CAACW,EAAG,oBAAmBJ,MAAO,EAAxF;;AACA,QAAMK,IAAI,GAAG,MAAMV,YAAY,CAAC,IAAD,CAA/B;;AACA,QAAMW,KAAK,GAAG,MAAMX,YAAY,CAAC,KAAD,CAAhC;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACc,OAAD,CAAL,CAAeM,IAAf,CAAoB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChCX,MAAAA,aAAa,CAACW,IAAI,CAACC,MAAN,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,CAACR,OAAD,CAJM,CAAT;AAMA,MAAIS,YAAY,GAAG,EAAnB;AAEA;;;;;;;;;;;;;;AAcA3B,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACgB,MAAD,CAAL,CAAcI,IAAd,CAAmB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAC/B,YAAMG,MAAM,GAAGH,IAAI,CAACV,IAAL,CAAUc,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACAb,MAAAA,OAAO,CAACY,MAAD,CAAP;AACD,KAHD;AAID,GALQ,EAKN,CAACR,MAAD,CALM,CAAT;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAA/B;AAAmD,IAAA,OAAO,EAAER,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,GAAG,EAAG,kCAAD,GAAqCZ,KAAK,CAACqB,WAFlD;AAGE,IAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEpB,SAAb;AAAwB,IAAA,MAAM,EAAEY,KAAhC;AAAuC,IAAA,QAAQ,MAA/C;AAAgD,IAAA,IAAI,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACsB,KADT,CADF,CADF,CADF,EASE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EACD,qCAAqCtB,KAAK,CAACqB,WAF/C;AAIE,IAAA,GAAG,EAAC,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGvB,KAAK,CAACwB,YAJT,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGxB,KAAK,CAACyB,iBAFT,CAPF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMzB,KAAK,CAAC0B,QAAZ,CAbF,CATF,CADF,CADF,CADF,EA8BE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAET,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EA+BE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEU,MAAAA,cAAc,EAAE;AAAlB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,IAAI,CAACuB,GAAL,CAAUvB,IAAD,IACR,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACM,EADZ;AAEE,IAAA,IAAI,EAAEN,IAAI,CAACwB,IAFb;AAGE,IAAA,SAAS,EAAExB,IAAI,CAACyB,SAHlB;AAIE,IAAA,GAAG,EAAEzB,IAAI,CAAC0B,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CA/BF,CATF,EAqDE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAElB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CArDF,CADF,CAVF,CADF;AA0ED,CAjHD;;AAkHA,eAAed,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport Trailer from \"./trailer\";\r\nimport Actors from \"./actors\";\r\nimport { IoIosStarOutline } from \"react-icons/io\";\r\nimport { MdLanguage } from \"react-icons/md\";\r\n\r\nconst Cards = (props) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [trailerKey, setTrailerKey] = useState([]);\r\n  const [cast, setCast] = useState([]);\r\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\r\n  const trailer = `https://api.themoviedb.org/3/movie/${props.key}/videos?api_key=${apiKey}&append_to_respone=videos`;\r\n  const credit = `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${apiKey}`;\r\n  const Open = () => setShowPopup(true);\r\n  const Close = () => setShowPopup(false);\r\n\r\n  useEffect(() => {\r\n    axios(trailer).then(({ data }) => {\r\n      setTrailerKey(data.propss);\r\n    });\r\n  }, [trailer]);\r\n\r\n  let trailerMovie = \"\";\r\n\r\n  /* for (let i = 0; i < trailerKey.length; i++) {\r\n    let name = trailerKey[i].name.toLowerCase().split(\" \");\r\n    for (let a = 0; a < name.length; a++) {\r\n      if (name[a] === \"official\" && name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n      if (name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n    }\r\n  } */\r\n\r\n  useEffect(() => {\r\n    axios(credit).then(({ data }) => {\r\n      const actors = data.cast.slice(0, 8);\r\n      setCast(actors);\r\n    });\r\n  }, [credit]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"movie\" style={{ width: \"13rem\" }} onClick={Open}>\r\n        <button>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`https://image.tmdb.org/t/p/w185/` + props.poster_path}\r\n            alt=\"no image found\"\r\n          />\r\n        </button>\r\n      </Card>\r\n      <Modal show={showPopup} onHide={Close} centered size=\"lg\">\r\n        <div className=\"popup\">\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className=\"titlemovie\">\r\n                {props.title}\r\n                {/* ({props.release_date.substring(0, 4)}) */}\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"discription\">\r\n                <div className=\"row\">\r\n                  <div className=\"modalimg\">\r\n                    <img\r\n                      src={\r\n                        \"https://image.tmdb.org/t/p/w185/\" + props.poster_path\r\n                      }\r\n                      alt=\"ok\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <div className=\"data\">\r\n                      <p>\r\n                        <IoIosStarOutline style={{ color: \"yellow\" }} />\r\n                        <IoIosStarOutline style={{ color: \"yellow\" }} />\r\n                        <IoIosStarOutline style={{ color: \"yellow\" }} />\r\n                        {props.vote_average}\r\n                      </p>\r\n                      <p>\r\n                        <MdLanguage className=\"earth\" />\r\n                        {props.original_language}\r\n                      </p>\r\n                    </div>\r\n                    <h5> {props.overview}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Trailer trailer={trailerMovie} />\r\n            <div className=\"actors\">\r\n              <div className=\"row\" style={{ justifyContent: \"space-evenly\" }}>\r\n                {cast.map((cast) => (\r\n                  <Actors\r\n                    key={cast.id}\r\n                    name={cast.name}\r\n                    character={cast.character}\r\n                    img={cast.profile_path}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={Close}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}