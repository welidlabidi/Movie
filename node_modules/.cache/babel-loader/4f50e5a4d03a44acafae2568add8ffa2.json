{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welid\\\\Desktop\\\\react\\\\reactmoevies\\\\src\\\\cards.js\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Popup from \"./popup\";\n\nconst Cards = ({\n  result\n}) => {\n  const [showPopup, setShowPopup] = useState(false);\n\n  const Open = () => setShowPopup(true);\n\n  const Close = () => setShowPopup(false);\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: \"15rem\"\n    },\n    onClick: Open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: `http://image.tmdb.org/t/p/w185/` + result.poster_path,\n    alt: \"no image found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    show: showPopup,\n    onHide: Close,\n    animation: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Modal heading\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Woohoo, you're reading this text in a modal!\"), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: Close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: Close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Save Changes\"))));\n};\n\nexport default Cards;\n{\n  /*  <Card.Text></Card.Text>\r\n          <CollapsePage\r\n            rating={result.vote_average}\r\n            {result.overview}\r\n            date={result.release_date}\r\n            language={result.original_language}\r\n          /> */\n}\n{\n  /*  <Popup show={showPopup} hide={() => setShowPopup(false)} /> */\n}","map":{"version":3,"sources":["C:/Users/welid/Desktop/react/reactmoevies/src/cards.js"],"names":["React","useState","Card","Button","Modal","Popup","Cards","result","showPopup","setShowPopup","Open","Close","width","poster_path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMS,IAAI,GAAG,MAAMD,YAAY,CAAC,IAAD,CAA/B;;AACA,QAAME,KAAK,GAAG,MAAMF,YAAY,CAAC,KAAD,CAAhC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAiC,IAAA,OAAO,EAAEF,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,GAAG,EAAG,iCAAD,GAAoCH,MAAM,CAACM,WAFlD;AAGE,IAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,SAAb;AAAwB,IAAA,MAAM,EAAEG,KAAhC;AAAuC,IAAA,SAAS,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CALF,CAVF,CADF;AA2BD,CAjCD;;AAkCA,eAAeL,KAAf;AACA;AACE;;;;;;;AAOD;AACD;AACE;AACD","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Popup from \"./popup\";\r\n\r\nconst Cards = ({ result }) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const Open = () => setShowPopup(true);\r\n  const Close = () => setShowPopup(false);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Card style={{ width: \"15rem\" }} onClick={Open}>\r\n        <button>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`http://image.tmdb.org/t/p/w185/` + result.poster_path}\r\n            alt=\"no image found\"\r\n          />\r\n        </button>\r\n      </Card>\r\n      <Modal show={showPopup} onHide={Close} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={Close}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={Close}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n{\r\n  /*  <Card.Text></Card.Text>\r\n          <CollapsePage\r\n            rating={result.vote_average}\r\n            {result.overview}\r\n            date={result.release_date}\r\n            language={result.original_language}\r\n          /> */\r\n}\r\n{\r\n  /*  <Popup show={showPopup} hide={() => setShowPopup(false)} /> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}