{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welid\\\\Desktop\\\\react\\\\movies\\\\src\\\\comp\\\\cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport Trailer from \"./trailer\";\nimport Actors from \"./actors\";\nimport { MdLanguage } from \"react-icons/md\";\n\nconst Cards = props => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [trailerKey, setTrailerKey] = useState([]);\n  const [cast, setCast] = useState([]);\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\n  const trailer = `https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=${apiKey}&append_to_respone=videos`;\n  const credit = `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${apiKey}`;\n\n  const Open = () => setShowPopup(true);\n\n  const Close = () => setShowPopup(false);\n\n  useEffect(() => {\n    axios(trailer).then(({\n      data\n    }) => {\n      setTrailerKey(data.results);\n    });\n  }, [trailer]);\n  let trailerMovie = \"\";\n\n  for (let i = 0; i < trailerKey.length; i++) {\n    let name = trailerKey[i].name.toLowerCase().split(\" \");\n\n    for (let a = 0; a < name.length; a++) {\n      if (name[a] === \"official\" && name[a] === \"trailer\") {\n        trailerMovie = trailerKey[i].key;\n        name = trailerKey[i].name;\n      }\n\n      if (name[a] === \"trailer\") {\n        trailerMovie = trailerKey[i].key;\n        name = trailerKey[i].name;\n      }\n    }\n  }\n\n  useEffect(() => {\n    axios(credit).then(({\n      data\n    }) => {\n      const actors = data.cast.slice(0, 8);\n      setCast(actors);\n    });\n  }, [credit]);\n  const date = props.release_date;\n  console.log(date);\n\n  for (let i = 0; i < props.release_date.length; i++) {\n    console.log(i);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"movie\",\n    style: {\n      width: \"12rem\"\n    },\n    onClick: Open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"buttoncard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: `https://image.tmdb.org/t/p/w185/` + props.img,\n    alt: \"no image found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    show: showPopup,\n    onHide: Close,\n    centered: true,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titlemovie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.title)))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modalimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w185/\" + props.img,\n    alt: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \" IMBd:\", props.vote_average), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(MdLanguage, {\n    className: \"earth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), props.original_language)), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" \", props.overview))))), React.createElement(Trailer, {\n    trailer: trailerMovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"actors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      justifyContent: \"space-evenly\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, cast.map(cast => React.createElement(Actors, {\n    key: cast.id,\n    name: cast.name,\n    character: cast.character,\n    img: cast.profile_path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: Close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/welid/Desktop/react/movies/src/comp/cards.js"],"names":["React","useState","useEffect","Card","Button","Modal","axios","Trailer","Actors","MdLanguage","Cards","props","showPopup","setShowPopup","trailerKey","setTrailerKey","cast","setCast","apiKey","trailer","id","credit","Open","Close","then","data","results","trailerMovie","i","length","name","toLowerCase","split","a","key","actors","slice","date","release_date","console","log","width","img","title","vote_average","original_language","overview","justifyContent","map","character","profile_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport Trailer from \"./trailer\";\r\nimport Actors from \"./actors\";\r\nimport { MdLanguage } from \"react-icons/md\";\r\n\r\nconst Cards = (props) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [trailerKey, setTrailerKey] = useState([]);\r\n  const [cast, setCast] = useState([]);\r\n  const apiKey = \"fac34116c639f3e75cd5205251be421c\";\r\n  const trailer = `https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=${apiKey}&append_to_respone=videos`;\r\n  const credit = `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${apiKey}`;\r\n  const Open = () => setShowPopup(true);\r\n  const Close = () => setShowPopup(false);\r\n\r\n  useEffect(() => {\r\n    axios(trailer).then(({ data }) => {\r\n      setTrailerKey(data.results);\r\n    });\r\n  }, [trailer]);\r\n\r\n  let trailerMovie = \"\";\r\n\r\n  for (let i = 0; i < trailerKey.length; i++) {\r\n    let name = trailerKey[i].name.toLowerCase().split(\" \");\r\n    for (let a = 0; a < name.length; a++) {\r\n      if (name[a] === \"official\" && name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n      if (name[a] === \"trailer\") {\r\n        trailerMovie = trailerKey[i].key;\r\n        name = trailerKey[i].name;\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios(credit).then(({ data }) => {\r\n      const actors = data.cast.slice(0, 8);\r\n      setCast(actors);\r\n    });\r\n  }, [credit]);\r\n\r\n  const date = props.release_date;\r\n  console.log(date);\r\n  for (let i = 0; i < props.release_date.length; i++) {\r\n    console.log(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"movie\" style={{ width: \"12rem\" }} onClick={Open}>\r\n        <button className=\"buttoncard\">\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`https://image.tmdb.org/t/p/w185/` + props.img}\r\n            alt=\"no image found\"\r\n          />\r\n        </button>\r\n      </Card>\r\n      <Modal show={showPopup} onHide={Close} centered size=\"lg\">\r\n        <div className=\"popup\">\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className=\"titlemovie\">\r\n                <p>\r\n                  {props.title}\r\n                  {/* ({shortDate}) */}\r\n                </p>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"discription\">\r\n                <div className=\"row\">\r\n                  <div className=\"modalimg\">\r\n                    <img\r\n                      src={\"https://image.tmdb.org/t/p/w185/\" + props.img}\r\n                      alt=\"ok\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <div className=\"data\">\r\n                      <p> IMBd:{props.vote_average}</p>\r\n\r\n                      <p>\r\n                        <MdLanguage className=\"earth\" />\r\n                        {props.original_language}\r\n                      </p>\r\n                    </div>\r\n                    <h5> {props.overview}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Trailer trailer={trailerMovie} />\r\n            <div className=\"actors\">\r\n              <div className=\"row\" style={{ justifyContent: \"space-evenly\" }}>\r\n                {cast.map((cast) => (\r\n                  <Actors\r\n                    key={cast.id}\r\n                    name={cast.name}\r\n                    character={cast.character}\r\n                    img={cast.profile_path}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={Close}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}